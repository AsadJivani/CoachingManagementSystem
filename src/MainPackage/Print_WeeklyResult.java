/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainPackage;


import Classes.WeeklyTestReports;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import org.apache.commons.lang3.StringUtils;


/**
 *
 * @author asadj
 */
public class Print_WeeklyResult extends javax.swing.JDialog {

    
    String dateString2;
    Connection con;
    PreparedStatement ps;
    ResultSet rs;
   public Connection conn() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:49172;"
                    + "databaseName=sscc;user=sa;password=sa9";
            return DriverManager.getConnection(url);
        } catch (SQLException | ClassNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "An error occured while Connecting to Database.");
        }
        return null;
    }

    public Print_WeeklyResult(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        try {
            con = conn();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getLocalizedMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Print_weekly = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Date = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Grade_weeklyprint = new javax.swing.JComboBox();
        Subject_weeklyprint = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        Print_weekly.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 14)); // NOI18N
        jLabel1.setText("Class:");

        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 14)); // NOI18N
        jLabel2.setText("Date of Entry:");

        jLabel3.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 14)); // NOI18N
        jLabel3.setText("Subject:");

        Grade_weeklyprint.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "IX-A", "X-A", "X-B", "XI-A", "XI-B", "XII-A", "XI-Commerce", "XII-Commerce", "B.com-I", "B.com-II" }));

        Subject_weeklyprint.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Physics", "Chemistry", "Mathematics", "Biology", "Computer", "Pakistan Studies", "Islamiat", "English", "Sindhi", "Urdu", "ITP", "Accounting", "Economics", "Statistics", "Business Maths", "B.Management", "B.Communication", "E.O.P", "B.Law", "Banking", "Adv.Accounting", "Cost Accounting", "C.Geo", "P.O.C" }));

        javax.swing.GroupLayout Print_weeklyLayout = new javax.swing.GroupLayout(Print_weekly);
        Print_weekly.setLayout(Print_weeklyLayout);
        Print_weeklyLayout.setHorizontalGroup(
            Print_weeklyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Print_weeklyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Print_weeklyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Print_weeklyLayout.createSequentialGroup()
                        .addGroup(Print_weeklyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(Print_weeklyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Subject_weeklyprint, javax.swing.GroupLayout.Alignment.TRAILING, 0, 228, Short.MAX_VALUE)
                            .addComponent(Grade_weeklyprint, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        Print_weeklyLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3});

        Print_weeklyLayout.setVerticalGroup(
            Print_weeklyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Print_weeklyLayout.createSequentialGroup()
                .addGroup(Print_weeklyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Print_weeklyLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Print_weeklyLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Grade_weeklyprint, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(Print_weeklyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Print_weeklyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Subject_weeklyprint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Print_weeklyLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3});

        Print_weeklyLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Date, Grade_weeklyprint, Subject_weeklyprint});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Print_weekly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Print_weekly, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    float Highestmarks = 0;
    float secondhighestmarks = 0;
    float thirdhighestmarks = 0;
    ArrayList<String> firstposholder = new ArrayList<String>();
    ArrayList<String> secondposholder = new ArrayList<String>();
    ArrayList<String> thirdposholder = new ArrayList<String>();
    ArrayList<String> failures = new ArrayList<String>();
    String subject = null;

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       

        if (Date.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "PLEASE ENTER THE DATE");
        } else {

            /////////////date work

            
  SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
  dateString2=sdf.format(Date.getDate());

//  JOptionPane.showMessageDialog(rootPane, dateString2);
            
            
            
////////////for the highest
            try {
//                ps = con.prepareStatement(";WITH Results_CTE AS (SELECT distinct marks,ROW_NUMBER() OVER (ORDER BY Marks DESC ) AS RowNum From WeeklyTestTable  where class='"+Grade_weeklyprint.getSelectedItem()+"' AND Date_of_Entry='" + dateString2 + "' AND Subject='" + Subject_weeklyprint.getSelectedItem() + "' ) select Marks from Results_CTE where RowNum="+1+"");
                ps=con.prepareStatement("select distinct top 1 marks from WeeklyTestTable where class='"+Grade_weeklyprint.getSelectedItem()+"' AND Date_of_Entry='" + dateString2 + "' AND Subject='" + Subject_weeklyprint.getSelectedItem() + "' order by marks DESC ");
                rs = ps.executeQuery();
                while (rs.next()) {
                    Highestmarks = rs.getFloat(1);

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getLocalizedMessage() + 1);
            }
            System.out.println(Highestmarks);
            //////////////for a second highest marks
            try {
//                ps = con.prepareStatement(";WITH Results_CTE AS (SELECT distinct marks,ROW_NUMBER() OVER (ORDER BY Marks DESC ) AS RowNum From WeeklyTestTable  where class='"+Grade_weeklyprint.getSelectedItem()+"' AND Date_of_Entry='" + dateString2 + "' AND Subject='" + Subject_weeklyprint.getSelectedItem() + "' ) select Marks from Results_CTE where RowNum="+2+"");
                ps=con.prepareStatement("select distinct top 2 marks from WeeklyTestTable where class='"+Grade_weeklyprint.getSelectedItem()+"' AND Date_of_Entry='" + dateString2 + "' AND Subject='" + Subject_weeklyprint.getSelectedItem() + "' order by marks DESC ");
                rs = ps.executeQuery();
                while (rs.next()) {
                    
                    secondhighestmarks = rs.getFloat(1);

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getLocalizedMessage() + 2);
            }

            ///////////////////for third highest marks
            try {
//                ps = con.prepareStatement(";WITH Results_CTE AS (SELECT distinct marks,ROW_NUMBER() OVER (ORDER BY Marks DESC ) AS RowNum From WeeklyTestTable  where class='"+Grade_weeklyprint.getSelectedItem()+"' AND Date_of_Entry='" + dateString2 + "' AND Subject='" + Subject_weeklyprint.getSelectedItem() + "' ) select Marks from Results_CTE where RowNum="+3+"");
                ps=con.prepareStatement("select distinct top 3 marks from WeeklyTestTable where class='"+Grade_weeklyprint.getSelectedItem()+"' AND Date_of_Entry='" + dateString2 + "' AND Subject='" + Subject_weeklyprint.getSelectedItem() + "' order by marks DESC ");
                rs = ps.executeQuery();
                while (rs.next()) {
                    thirdhighestmarks = rs.getFloat(1);

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getLocalizedMessage() + 3);
            }
            if (Highestmarks>=5) {
                 ///////now for getting who got 1st position
            try {
                ps = con.prepareStatement("select name from  WeeklyTestTable where Class='" + Grade_weeklyprint.getSelectedItem() + "' AND Date_of_Entry='" + dateString2 + "' AND Marks=" + Highestmarks + " AND Subject='" + Subject_weeklyprint.getSelectedItem() + "'");
                rs = ps.executeQuery();
                while (rs.next()) {
                    firstposholder.add(rs.getString(1));

                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getLocalizedMessage() + 4);
            }
                
            }
          
            if (secondhighestmarks>=5) {
                  ///////now for getting who got 2nd position
            try {
                ps = con.prepareStatement("select name from WeeklyTestTable where Class='" + Grade_weeklyprint.getSelectedItem() + "' AND Date_of_Entry='" + dateString2.toString() + "' AND Marks=" + secondhighestmarks + " AND Subject='" + Subject_weeklyprint.getSelectedItem() + "'");
                rs = ps.executeQuery();
                while (rs.next()) {
                    secondposholder.add(rs.getString(1));

                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getLocalizedMessage() + 5);
            }
            }
          
            if (thirdhighestmarks>=5) {
                  ///////now for getting who got 3rd position
            try {
                ps = con.prepareStatement("select name from WeeklyTestTable where Class='" + Grade_weeklyprint.getSelectedItem() + "' AND Date_of_Entry='" + dateString2.toString() + "' AND Marks=" + thirdhighestmarks + " AND Subject='" + Subject_weeklyprint.getSelectedItem() + "'");
                rs = ps.executeQuery();
                while (rs.next()) {
                    thirdposholder.add(rs.getString(1));

                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getLocalizedMessage() + 6);
            }
            }
          

            ///////now for getting failures
            try {
                ps = con.prepareStatement("select name from WeeklyTestTable where Class='" + Grade_weeklyprint.getSelectedItem() + "' AND Date_of_Entry='" + dateString2.toString() + "' AND Subject='" + Subject_weeklyprint.getSelectedItem() + "' AND Marks<5");
                rs = ps.executeQuery();
                while (rs.next()) {
                    failures.add(rs.getString(1));

                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getLocalizedMessage() + 7);
            }
            DecimalFormat format = new DecimalFormat("0.#");
            
            String firstpos = StringUtils.join(firstposholder.toArray(), "(" + format.format(Highestmarks) + "), ") + "(" + format.format(Highestmarks) + ")";
            String secondpos = StringUtils.join(secondposholder.toArray(), "(" + format.format(secondhighestmarks) + "), ") + "(" + format.format(secondhighestmarks) + ")";
            String thirdpos = StringUtils.join(thirdposholder.toArray(), "(" + format.format(thirdhighestmarks) + "), ") + "(" + format.format(thirdhighestmarks) + ")";
            String failure = StringUtils.join(failures.toArray(), ", ");
            String[] Grade = Grade_weeklyprint.getSelectedItem().toString().split("-");
            String selectedClass = Grade[0];
            String section = Grade[1];
          
            if(firstpos.equals("(0)") || firstpos.equals("("+format.format(Highestmarks)+")")){
            firstpos="";
            }
            if(secondpos.equals("(0)") || secondpos.equals("("+format.format(secondhighestmarks)+")")){
            secondpos="";
            }
            if(thirdpos.equals("(0)") || thirdpos.equals("("+ format.format(thirdhighestmarks) +")")){
            thirdpos="";
            }
            this.setVisible(false);
            
            WeeklyTestReports report = new WeeklyTestReports();
            report.showReport("src/Reports/Weekly_result.jrxml", "Weekly Test Result", firstpos, secondpos, thirdpos, failure, Subject_weeklyprint.getSelectedItem().toString(), selectedClass, thirdhighestmarks, dateString2, section, Grade_weeklyprint.getSelectedItem().toString());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Print_WeeklyResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Print_WeeklyResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Print_WeeklyResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Print_WeeklyResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Print_WeeklyResult dialog = new Print_WeeklyResult(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Date;
    public javax.swing.JComboBox Grade_weeklyprint;
    private javax.swing.JPanel Print_weekly;
    private javax.swing.JComboBox Subject_weeklyprint;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
